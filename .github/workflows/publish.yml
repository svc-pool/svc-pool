name: Publish

on:
  release:
    types: [published]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 12
          - x
    name: CI node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - run: yarn install
      - run: yarn ci

  release:
    name: Release
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # yarn set version issue
      - uses: actions/setup-node@v2-beta
        with:
          check-latest: true
      - run: yarn install
      - run: yarn build

      # Set delivery info
      - name: Set delivery version
        run: |
          echo "DELIVERY_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
      - name: Set delivery tag alpha
        if: ${{ github.event.release.prerelease }}
        run: /
          echo "NPM_TAG=experimental" >> $GITHUB_ENV
      # End set delivery info

      # Delivery to NPM
      - shell: pwsh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn config set npmAuthToken "$env:NPM_TOKEN"
      - run: yarn delivery

      # Delivery to GPR
      - run: yarn config set npmPublishRegistry 'https://npm.pkg.github.com/'
      - run: yarn config set npmAuthToken "$env:GPR_TOKEN"
        shell: pwsh
        env:
          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
      - run: yarn delivery
